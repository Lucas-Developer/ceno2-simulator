#!/bin/sh
# dCDN canonical operation experiment.
#
# This uses ``inotifywait`` from ``inotify-tools``,
# ``llvm-config`` from ``llvm`` for nodes,
# ``curl`` for clients.

SHARED_PATH=/shared/dcdn/1-canonical
CTL_NAME=ctl
CTL_PATH="$SHARED_PATH/$CTL_NAME"
LOG_PATH="$SHARED_PATH/$(hostname).log"
DAEMON_PID_PATH="$SHARED_PATH/$(hostname).daemon.pid"
DAEMON_LOG_PATH="$SHARED_PATH/$(hostname).daemon.log"
PATH="$(dirname "$SHARED_PATH")/bin":$PATH

INJECTOR_PORT=7000
INJECTOR_ANN_SECS=60
CLIENT_PORT=8006

# Enable more aggressive address sanitization checks.
export ASAN_SYMBOLIZER_PATH="$(llvm-config --bindir)/llvm-symbolizer"
export MSAN_SYMBOLIZER_PATH="$(llvm-config --bindir)/llvm-symbolizer"
export ASAN_OPTIONS='strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1'


get_node_role() {
    case "$(hostname)" in
        (vmW001) echo injector ;;
        (vmE001) echo client ;;
        (*) echo UNKNOWN ;;
    esac
}

log() {
   echo "$(date -uIs) $1" >> "$LOG_PATH"
}

run_daemon() {  # in temporary directory, save PID, log output
    cd $(mktemp -d)

    # Copy injector key stuff in the current directory,
    # where the daemon expects it.
    cp "$SHARED_PATH/injector_pk" .
    if [ $NODE_ROLE = injector ]; then
        cp "$SHARED_PATH/injector_sk" .
    fi

    "$@" > "$DAEMON_LOG_PATH" 2>&1 &
    echo $! > "$DAEMON_PID_PATH"

    cd -
}

poll_for_text() {  # text, file path, timeout in seconds
    local poll_period=5
    local now=$(date +%s)
    local limit=$((now + $3))

    while [ $now -lt $limit ]; do
        if grep -q "$1" "$2"; then
            return 0
        fi
        sleep $poll_period
        now=$(date +%s)
    done
    return 1
}

run() {
    local cmd="$1"
    local url http_code start stop

    # Common commands.
    log "$cmd"
    test $NODE_ROLE = UNKNOWN && return

    case "$cmd" in
        (NODE_STOP) kill "$(cat "$DAEMON_PID_PATH")" ;;
    esac

    # Injector commands.
    test $NODE_ROLE = injector && case "$cmd" in
        (INJECTOR_START)
            run_daemon injector -p $INJECTOR_PORT
            # Wait a limited time for the injector to announce.
            if poll_for_text 'announce complete' "$DAEMON_LOG_PATH" $INJECTOR_ANN_SECS; then
                log 'INJECTOR_START -> OK'
            else
                log 'INJECTOR_START -> FAILED'
            fi
            ;;
    esac

    # Client commands.
    test $NODE_ROLE = client && case "$cmd" in
        (CLIENT_START) run_daemon client -n ;;
        (CLIENT_FETCH\ *)
            url=${cmd##* }
            start=$(date +%s)
            http_code=$(curl -x localhost:$CLIENT_PORT "$url" -o /dev/null -w '%{http_code}' --silent --show-error)
            stop=$(date +%s)
            log "CLIENT_FETCH -> HTTP $http_code $((stop-start))s"
            ;;
    esac
}


mkdir -p "$SHARED_PATH"
NODE_ROLE=$(get_node_role)

# Create injector keys on boot if missing.
if [ $NODE_ROLE = injector -a ! -f "$SHARED_PATH/injector_sk" ]; then
    (cd "$SHARED_PATH" && keygen)
fi

# Main loop, wait for commands.
while true; do
    if f=$(inotifywait -q -e moved_to "$SHARED_PATH" | cut -f3 -d' '); then
        if [ "$f" = "$CTL_NAME" ]; then  # the file was moved in
            run "$(cat "$CTL_PATH")"
        fi
    else  # something went wrong, wait a little
        sleep 1
    fi
done
